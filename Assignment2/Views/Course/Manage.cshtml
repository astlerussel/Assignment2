@model ManageCourseViewModel

<div class="container mt-4">
    <h2>Manage your course</h2>

    <p>
        <a asp-action="Index" asp-controller="Course">All courses</a> |
        <a asp-action="Edit" asp-route-id="@Model.Course.CourseId" asp-controller="Course">Edit this course</a> |
        <a asp-action="Create" asp-controller="Course">Add new course</a>
    </p>

    <div class="mt-3">
        <h5>Course summary:</h5>
        <p>The course "@Model.Course.Name" is in room @Model.Course.RoomNumber starting on @Model.Course.StartDate.ToShortDateString() and the instructor is "@Model.Course.Instructor".</p>

        <!-- Enrollment counts -->
        <p>
            Invites not sent: @Model.Course.Students.Count(s => s.Status == EnrollmentStatus.ConfirmationMessageNotSent) &nbsp;
            Sent count: @Model.Course.Students.Count(s => s.Status == EnrollmentStatus.ConfirmationMessageSent) &nbsp;
            Confirmed count: @Model.Course.Students.Count(s => s.Status == EnrollmentStatus.EnrollmentConfirmed) &nbsp;
            Declined count: @Model.Course.Students.Count(s => s.Status == EnrollmentStatus.EnrollmentDeclined)
        </p>
    </div>

    <h5>Students:</h5>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Enrollment status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Model.Course.Students)
            {
                <tr>
                    <td>@student.Name</td>
                    <td><a href="mailto:@student.Email">@student.Email</a></td>
                    <td>@student.Status.ToString().Replace("ConfirmationMessage", "confirmation ").Replace("Enrollment", "Enrollment ").Replace("NotSent", "not sent")</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Form to add a new student -->
    <form asp-action="AddStudent" method="post" class="d-flex gap-2 mt-3">
        <div class="d-flex align-items-center gap-1">
            <label asp-for="Student.Name" class="control-label me-2"></label>
            <input asp-for="Student.Name" class="form-control" placeholder="Name" />
            <span asp-validation-for="Student.Name" class="text-danger"></span>
        </div>

        <div class="d-flex align-items-center gap-1">
            <label asp-for="Student.Email" class="control-label me-2"></label>
            <input asp-for="Student.Email" type="email" class="form-control" placeholder="Email" />
            <span asp-validation-for="Student.Email" class="text-danger"></span>
        </div>

        <!-- Hidden field to pass CourseId -->
        <input type="hidden" asp-for="Student.CourseId" value="@Model.Course.CourseId" />

        <button type="submit" class="btn btn-primary">Create student</button>
    </form>



    <!-- Action to send confirmation messages -->
    <div class="mt-3">
        <form asp-action="SendConfirmationMessages" asp-controller="Course" asp-route-courseId="@Model.Course.CourseId" method="post">
            <button type="submit" class="btn btn-primary">Send confirmation messages</button>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
